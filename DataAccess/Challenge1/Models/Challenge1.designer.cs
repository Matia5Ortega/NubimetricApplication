#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.Challenge1.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Nubimetrics")]
	public partial class Challenge1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public Challenge1DataContext() : 
				base(global::DataAccess.Properties.Settings.Default.NubimetricsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Challenge1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Challenge1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Challenge1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Challenge1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCountryByCountryId")]
		public ISingleResult<GetCountryByCountryIdResult> GetCountryByCountryId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="VarChar(4)")] string countryId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), countryId);
			return ((ISingleResult<GetCountryByCountryIdResult>)(result.ReturnValue));
		}
	}
	
	public partial class GetCountryByCountryIdResult
	{
		
		private string _CountryId;
		
		private string _CurrencyId;
		
		private string _Locale;
		
		private string _Name;
		
		public GetCountryByCountryIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this._CurrencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this._Locale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
